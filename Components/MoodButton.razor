@using MoodSync.Data  
@inject MoodSyncContext DbContext  

<button class="mood-button" style="@ButtonStyle" @onclick="OnMoodSelected">
    @MoodEmoji @MoodText
</button>

@if (showConfirmation)
{
    <p class="confirmation">Mood logged!</p>
}

@code {
    [Parameter]
    public string MoodText { get; set; } = "Mood";

    [Parameter]
    public string MoodEmoji { get; set; } = "😊";

    [Parameter]
    public string Color { get; set; } = "gray";

    private string ButtonStyle => $"background-color: {Color};";
    private bool showConfirmation = false;

    private async Task OnMoodSelected()
    {
        // Save to database
        var entry = new MoodSync.Models.MoodEntry
        {
            Mood = MoodText,
            Timestamp = DateTime.Now
        };
        try {
            DbContext.MoodEntries.Add(entry);
            await DbContext.SaveChangesAsync();
        } catch (Exception ex) {
            Console.WriteLine("Error: " + ex.Message);
        }

        // Show confirmation
        showConfirmation = true;
        await Task.Delay(2000);
        showConfirmation = false;
    }
}